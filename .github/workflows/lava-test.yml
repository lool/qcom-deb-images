name: Tests

on:
  workflow_call:
    inputs:
      url:
        required: true
        type: string

# implicitely set all other permissions to none
permissions:
  checks: write # EnricoMi/publish-unit-test-result-action
  contents: read # actions/checkout
  packages: read # actions/download-artifact
  pull-requests: write # EnricoMi/publish-unit-test-result-action

env:
  BUILD_URL: ${{ inputs.url }}
  LAVA_CI: ci/lava/

jobs:
  prepare-job-list:
    runs-on: ubuntu-latest
    outputs:
      jobmatrix: ${{ steps.listjobs.outputs.jobmatrix }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Print trigger
        run: |
          echo "Triggered by ${{ github.event_name }}"
          echo "Build URL: $BUILD_URL"
      - name: "List jobs"
        id: listjobs
        run: |
          # json with list of relative filenames to LAVA templates
          J=$(find "${LAVA_CI}" -name '*.yaml' -print0 |
                  jq -Rs '
                      # split null-delimited list and remove last empty item
                      split("\u0000")[:-1]
                      # remove leading "ci/lava/"
                      | map(sub("^ci/lava/"; ""))
                      | {target: .}
                      ')
          echo "jobmatrix=$J" >> $GITHUB_OUTPUT
          echo "Preparing testjob files"

  submit-job:
    needs: prepare-job-list
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.prepare-job-list.outputs.jobmatrix) }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "Update test definition ${{ matrix.target }}"
        run: |
          # e.g. qrb2210-rb1/boot.yaml
          TARGET="${{ matrix.target }}"
          TEMPLATE="${LAVA_CI}${TARGET}"
          # left-side â€“ e.g. qrb2210-rb1
          DEVICE_TYPE="${TARGET%/*}"
          BUILD_DOWNLOAD_URL="$BUILD_URL"
          BUILD_FILE_NAME="unused"
          sed \
              -e "s|{{BUILD_DOWNLOAD_URL}}|${BUILD_DOWNLOAD_URL}|g" \
              -e "s|{{BUILD_FILE_NAME}}|${BUILD_FILE_NAME}|g" \
              -e "s|{{DEVICE_TYPE}}|${DEVICE_TYPE}|g" \
              -e "s|{{GITHUB_RUN_ID}}|${GITHUB_RUN_ID}|g" \
              -e "s|{{GITHUB_SHA}}|${GITHUB_SHA}|g" \
              -i "$TEMPLATE"
          cat "$TEMPLATE"

      - name: Submit ${{ matrix.target }}
        timeout-minutes: 240
        uses: foundriesio/lava-action@v6
        with:
          lava_token: ${{ secrets.LAVATOKEN }}
          lava_url: 'lava.infra.foundries.io'
          job_definition: ${{ env.LAVA_CI }}${{ matrix.target }}
          wait_for_job: true
          fail_action_on_failure: false
          save_result_as_artifact: true
          save_job_details: true

  publish-test-results:
    name: "Publish Tests Results"
    needs: submit-job
    runs-on: ubuntu-latest

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: "List files"
        run: |
          echo $GITHUB_WORKSPACE
          ls -R $GITHUB_WORKSPACE

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: "${{ github.workspace }}/artifacts/**/*.xml"

      - name: Publish Test Job Details
        run: |
          for json_file in $(find ${{ github.workspace }} -name "test-job-*.json")
          do
              DEVICE_TYPE=$(cat "$json_file" | jq -r ".requested_device_type")
              URL=$(cat "$json_file" | jq -r ".url")
              JOB_ID=$(cat "$json_file" | jq -r ".id")
              echo " * [Job $JOB_ID on $DEVICE_TYPE]($URL)"
              echo " * [Job $JOB_ID on $DEVICE_TYPE]($URL)" >> $GITHUB_STEP_SUMMARY
          done
